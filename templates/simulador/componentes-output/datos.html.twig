{% import "simulador/componentes-output/_funciones.html.twig" as funciones %}
<div class="flex output-contenedor">
    <div class="tabla">
        <h2>Procesos cargados</h2>
        <div class="cuerpo-tabla">
            <table style="text-align: center;">
                <tr class="header">
                    <th rowspan="2">ID</th>
                    <th rowspan="2">TA</th>
                    <th colspan="3">Ciclo</th>
                    <th rowspan="2">Tamaño</th>
                    <th rowspan="2">Prioridad</th>
                </tr>
                <tr class="header second">
                    <th>Irrupción</th>
                    <th>Bloqueo</th>
                    <th>Irrupción</th>
                </tr>
                <tbody>
                {% for key,proceso in simulador.procesos %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ proceso.ta }}</td>
                        <td>{{ proceso.ti1 }}</td>
                        <td>{{ proceso.bloqueo }}</td>
                        <td>{{ proceso.ti2 }}</td>
                        <td>{{ proceso.size }}</td>
                        {% if proceso.prioridad > 0 %}
                            <td>{{ proceso.prioridad }}</td>
                        {% endif %}
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
    </div>
    <div class="tabla">
        <h2>Particiones cargadas</h2>
        <div class="cuerpo-tabla">
            {{ funciones.renderMemoria(0, rafagas[rafagas|length -1]['particiones'], simulador.memoria, "Particiones") }}
        </div>
    </div>
    <div class="tabla">
        <h2>Datos del Simulador</h2>
        <div class="cuerpo-tabla text-left">
            <div>
                <span><i class="fas fa-exchange-alt"></i> Algoritmo de intercambio:
                    <strong>
                        <span>
                            {% if simulador.algoritmoIntercambio == 'ff' %}
                                First-Fit
                            {% elseif simulador.algoritmoIntercambio == 'bf' %}
                                Best-Fit
                            {% else %}
                                Worst-Fit
                            {% endif %}
                        </span>
                    </strong>
                </span>
            </div>
            <div>
                <span><i class="far fa-clock"></i> Algoritmo de planificación:
                    <strong>
                        <span>
                            {% if simulador.algoritmoPlanificacion == 'fcfs' %}
                                First Come First Serve (FCFS)
                            {% elseif simulador.algoritmoPlanificacion == 'rr' %}
                                Round-Robin (RR)
                            {% elseif simulador.algoritmoPlanificacion == 'sjf' %}
                                Shorten Job First (SJF)
                            {% elseif simulador.algoritmoPlanificacion == 'srtf' %}
                                Short Remaining Time First (SRTF)
                            {% else %}
                                Colas Multinivel
                            {% endif %}
                        </span>
                    </strong>
                </span>
            </div>
            {% if simulador.algoritmoPlanificacion == 'multinivel' %}
                <div class="multinivel-info">
                    {% for cola in simulador.colas %}
                        <div>
                            <span><i class="far fa-clock"></i>
                                {% if cola.prioridad == 3 %}
                                    Cola de prioridad alta:
                                {% elseif cola.prioridad == 2 %}
                                    Cola de prioridad media:
                                {% else %}
                                    Cola de prioridad baja:
                                {% endif %}
                            <strong>
                                <span>
                                    {% if cola.algoritmoPlanificacion == 'fcfs' %}
                                        First Come First Serve (FCFS)
                                    {% elseif cola.algoritmoPlanificacion == 'rr' %}
                                        Round-Robin (RR)
                                    {% elseif cola.algoritmoPlanificacion == 'sjf' %}
                                        Shorten Job First (SJF)
                                    {% elseif cola.algoritmoPlanificacion == 'srtf' %}
                                        Short Remaining Time First (SRTF)
                                    {% endif %}
                                </span>
                            </strong>
                            </span>
                        </div>
                    {% endfor %}
                </div>
            {% endif %}
            <div>
                <span><i class="fas fa-exchange-alt"></i> Tipo de Particiones:
                    <strong>
                        <span>
                            {% if simulador.memoria.tipo == 'fijas' %}
                                Fijas
                            {% else %}
                                Variables
                            {% endif %}
                        </span>
                    </strong>
                </span>
            </div>
            {% if simulador.quantum > 0 %}
                <div>
                <span><i class="fas fa-tint"></i> Quantum:
                    <strong>
                        <span>{{ simulador.quantum }}</span>
                    </strong>
                </span>
                </div>
            {% endif %}
        </div>
    </div>
    <div class="tabla">
        <h2>Estadísticas</h2>
        <div class="cuerpo-tabla pb-4">
            <table style="text-align: center;">
                <tr class="header">
                    <th>ID</th>
                    <th>Tiempo de retorno</th>
                    <th>Tiempo de espera</th>
                    <th>Uso de CPU</th>
                </tr>
                <tbody>
                {% for key,proceso in estadisticas %}
                    {% set porcentajeCPU = (proceso['uso_cpu']*100)/rafagas|length %}
                    <tr>
                        <td>{{ key }}</td>
                        <td>{{ proceso['tr'] }}</td>
                        <td>{{ proceso['te'] }}</td>
                        <td>{{ porcentajeCPU|number_format(2, ',', '.') }}%</td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            {% set usoCPUTotal = 0 %}
            {% set tiempoRetornoTotal = 0 %}
            {% set tiempoEsperaTotal = 0 %}
            {% for proceso in estadisticas %}
                {% set usoCPUTotal = usoCPUTotal + proceso['uso_cpu'] %}
                {% set tiempoRetornoTotal = tiempoRetornoTotal + proceso['tr'] %}
                {% set tiempoEsperaTotal = tiempoEsperaTotal + proceso['te'] %}
            {% endfor %}
            {% set porcentajeCPUTotal = (usoCPUTotal*100)/rafagas|length %}
            {% set porcentajeTiempoRetornoTotal = tiempoRetornoTotal/estadisticas|length %}
            {% set porcentajeTiempoEsperaTotal = tiempoEsperaTotal/estadisticas|length %}
            <div class="text-left">
                <span><i class="fas fa-exchange-alt"></i> Uso total CPU:
                    <strong>
                        <span>
                            {{ porcentajeCPUTotal|number_format(2, ',', '.') }}%
                        </span>
                    </strong>
                </span>
            </div>
            <div class="text-left">
                <span><i class="fas fa-exchange-alt"></i> Tiempo de retorno pormedio:
                    <strong>
                        <span>
                            {{ porcentajeTiempoRetornoTotal|number_format(2, ',', '.') }}
                        </span>
                    </strong>
                </span>
            </div>
            <div class="text-left">
                <span><i class="fas fa-exchange-alt"></i> Tiempo de espera pormedio:
                    <strong>
                        <span>
                            {{ porcentajeTiempoEsperaTotal|number_format(2, ',', '.') }}
                        </span>
                    </strong>
                </span>
            </div>
            <div class="text-left">
                <span><i class="fas fa-exchange-alt"></i> Desperdicio de memoria
                    {% if simulador.memoria.tipo == "fijas" %}
                        (fragmentación interna):
                    {% else %}
                        (fragmentación externa):
                    {% endif %}
                    <strong>
                        <span>
                            {{ fragmentacion }}KB
                        </span>
                    </strong>
                </span>
            </div>
        </div>
    </div>
</div>